{"version":3,"sources":["api.ts","helper.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","TodoInfo","_ref","todo","selectedTodo","onSelectedTodoChange","id","title","completed","isSelected","_jsxs","className","children","_jsx","classNames","type","onClick","TodoList","todos","length","map","TodoFilter","onFilterChange","currentFilter","onQueryChange","currentQuery","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","closeModal","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","userUploaded","setUserUploaded","_useState5","_useState6","isUSerError","setIsUSerError","useEffect","loadUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedUser","wrap","_context","prev","next","concat","sent","t0","stop","_x","apply","arguments","userId","shouldDisplayModal","href","email","name","App","setTodos","isLoadedTodos","setIsLoadedTodos","filterCondition","setFilterCondition","_useState7","_useState8","query","setQuery","_useState9","_useState10","setSelectedTodo","_useState11","_useState12","isLoadingError","setIsLoadingError","loadTodos","loadedTodos","filteredTodos","useMemo","filter","preparedQUery","toLowerCase","queriedTodo","includes","filterTodos","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58175ab1.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Todo } from './types/Todo';\n\nexport enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const filterTodos = (\n  todos: Todo[],\n  query: string,\n  filterCondition: FilterStatus,\n) => {\n  return todos.filter(todo => {\n    const preparedQUery = query.toLowerCase();\n    const queriedTodo = todo.title.toLowerCase().includes(preparedQUery);\n\n    switch (filterCondition) {\n      case FilterStatus.ALL:\n        return queriedTodo;\n      case FilterStatus.ACTIVE:\n        return queriedTodo && !todo.completed;\n      case FilterStatus.COMPLETED:\n        return queriedTodo && todo.completed;\n      default:\n        return 0;\n    }\n  });\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n  selectedTodo: Todo | null,\n  onSelectedTodoChange: (arg: Todo) => void;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelectedTodoChange,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const handleSelectedTodo = () => {\n    onSelectedTodoChange(todo);\n  };\n\n  const isSelected = selectedTodo?.id === id;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\" key={id}>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleSelectedTodo}\n        >\n          <span className=\"icon\">\n            {isSelected\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedTodoChange: (arg: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodoChange,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      {todos.length > 0 && (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n      )}\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <TodoInfo\n              todo={todo}\n              selectedTodo={selectedTodo}\n              onSelectedTodoChange={onSelectedTodoChange}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterStatus } from '../../helper';\n\ninterface Props {\n  onFilterChange: (arg: FilterStatus) => void,\n  currentFilter: FilterStatus,\n  onQueryChange: (arg: string) => void,\n  currentQuery: string,\n}\n\nexport const TodoFilter:React.FC<Props> = ({\n  onFilterChange,\n  currentFilter,\n  onQueryChange,\n  currentQuery,\n}) => {\n  const hanldeFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterChange(event.target.value as FilterStatus);\n  };\n\n  const hanldeQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.target.value);\n  };\n\n  const handleClearSearch = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={currentFilter}\n            onChange={hanldeFilterChange}\n          >\n            <option value={FilterStatus.ALL}>All</option>\n            <option value={FilterStatus.ACTIVE}>Active</option>\n            <option value={FilterStatus.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={currentQuery}\n          onChange={hanldeQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {currentQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n              aria-label=\"Clear search\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo,\n  closeModal: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  closeModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userUploaded, setUserUploaded] = useState(false);\n  const [isUSerError, setIsUSerError] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async (id: number) => {\n      try {\n        const loadedUser = await getUser(id);\n\n        setUser(loadedUser);\n        setUserUploaded(true);\n      } catch (error) {\n        setUserUploaded(true);\n        setIsUSerError(true);\n      }\n    };\n\n    loadUser(selectedTodo.userId);\n  }, [selectedTodo?.userId]);\n\n  const shouldDisplayModal = userUploaded && selectedTodo && user;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUSerError && (\n        <div className=\"modal-card\">\n          <div className=\"message p-2 my-4 is-danger\">\n            <p className=\"message-body\">Error loading data</p>\n          </div>\n        </div>\n      )}\n\n      {shouldDisplayModal\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeModal}\n                aria-label=\"Close modal\"\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : (\n          <Loader />\n        )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterStatus, filterTodos } from './helper';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadedTodos, setIsLoadedTodos] = useState(false);\n  const [filterCondition, setFilterCondition] = useState(FilterStatus.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setIsLoadedTodos(true);\n        setTodos(loadedTodos);\n      } catch (error) {\n        setIsLoadedTodos(true);\n        setIsLoadingError(true);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return filterTodos(todos, query, filterCondition);\n  }, [todos, filterCondition, query]);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={setFilterCondition}\n                currentFilter={filterCondition}\n                onQueryChange={setQuery}\n                currentQuery={query}\n              />\n            </div>\n\n            {!isLoadedTodos && <Loader />}\n\n            <div className=\"block\">\n              {!isLoadingError\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodoChange={setSelectedTodo}\n                  />\n                )\n                : (\n                  <div className=\"message p-2 my-4 is-danger\">\n                    <p className=\"message-body\">Error loading goods</p>\n                  </div>\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          closeModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}