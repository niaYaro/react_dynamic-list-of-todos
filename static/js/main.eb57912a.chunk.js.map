{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","_ref","todos","isTodoInfoRequested","onTodoInfoRequest","onUserIdChange","onSelectedTodoChange","_jsxs","className","children","length","_jsx","map","todo","id","title","completed","userId","classNames","type","onClick","TodoFilter","onFilterChange","currentFilter","onQueryChange","currentQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","currntUserId","selectedTodo","onTodoInfoRequestedChange","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","userUploaded","setUserUploaded","_useState5","_useState6","isUSerError","setIsUSerError","useEffect","loadUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedUser","wrap","_context","prev","next","concat","sent","t0","stop","_x","apply","arguments","href","name","App","setTodos","isLoadedTodos","setIsLoadedTodos","setIsTodoInfoRequested","_useState7","_useState8","filterCondition","setFilterCondition","_useState9","_useState10","query","setQuery","_useState11","_useState12","setUserId","_useState13","_useState14","setSelectedTodo","_useState15","_useState16","isLoadingError","setIsLoadingError","loadTodos","loadedTodos","filteredTodos","useMemo","filter","toLowerCase","includes","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb57912a.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  isTodoInfoRequested: boolean,\n  onTodoInfoRequest: (arg: boolean) => void,\n  onUserIdChange: (arg: number) => void,\n  onSelectedTodoChange: (arg: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  isTodoInfoRequested,\n  onTodoInfoRequest,\n  onUserIdChange,\n  onSelectedTodoChange,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      {todos.length > 0 && (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n      )}\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            userId,\n          } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onTodoInfoRequest(true);\n                    onUserIdChange(userId);\n                    onSelectedTodoChange(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    {isTodoInfoRequested\n                      ? <i className=\"far fa-eye-slash\" />\n                      : <i className=\"far fa-eye\" />}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","interface Props {\n  onFilterChange: (arg: string) => void,\n  currentFilter: string,\n  onQueryChange: (arg: string) => void,\n  currentQuery: string,\n}\n\nexport const TodoFilter:React.FC<Props> = ({\n  onFilterChange,\n  currentFilter,\n  onQueryChange,\n  currentQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={currentFilter}\n          onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n            onFilterChange(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={currentQuery}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          onQueryChange(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {currentQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onQueryChange('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  currntUserId: number | null,\n  selectedTodo: Todo | null,\n  onTodoInfoRequestedChange: (arg: boolean) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  currntUserId,\n  selectedTodo,\n  onTodoInfoRequestedChange,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userUploaded, setUserUploaded] = useState(false);\n  const [isUSerError, setIsUSerError] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async (id: number) => {\n      try {\n        const loadedUser = await getUser(id);\n\n        setUser(loadedUser);\n        setUserUploaded(true);\n      } catch (error) {\n        setUserUploaded(true);\n        setIsUSerError(true);\n      }\n    };\n\n    if (currntUserId) {\n      loadUser(currntUserId);\n    }\n  }, [currntUserId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUSerError && (\n        <div className=\"modal-card\">\n          <div className=\"message p-2 my-4 is-danger\">\n            <p className=\"message-body\">Error loading data</p>\n          </div>\n        </div>\n      )}\n\n      {!userUploaded || !selectedTodo || !user\n        ? (\n          <Loader />\n        )\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  onTodoInfoRequestedChange(false);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadedTodos, setIsLoadedTodos] = useState(false);\n  const [isTodoInfoRequested, setIsTodoInfoRequested] = useState(false);\n  const [filterCondition, setFilterCondition] = useState('');\n  const [query, setQuery] = useState('');\n  const [userId, setUserId] = useState<number | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setIsLoadedTodos(true);\n        setTodos(loadedTodos);\n      } catch (error) {\n        setIsLoadedTodos(true);\n        setIsLoadingError(true);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filterCondition) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return true;\n      }\n    }).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }, [todos, filterCondition, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={setFilterCondition}\n                currentFilter={filterCondition}\n                onQueryChange={setQuery}\n                currentQuery={query}\n              />\n            </div>\n\n            {!isLoadedTodos && <Loader />}\n\n            <div className=\"block\">\n              {!isLoadingError\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    onTodoInfoRequest={setIsTodoInfoRequested}\n                    onUserIdChange={setUserId}\n                    onSelectedTodoChange={setSelectedTodo}\n                    isTodoInfoRequested={isTodoInfoRequested}\n                  />\n                )\n                : (\n                  <div className=\"message p-2 my-4 is-danger\">\n                    <p className=\"message-body\">Error loading goods</p>\n                  </div>\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isTodoInfoRequested && (\n        <TodoModal\n          onTodoInfoRequestedChange={setIsTodoInfoRequested}\n          currntUserId={userId}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}